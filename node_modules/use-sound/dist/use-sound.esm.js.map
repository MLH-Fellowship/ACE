{"version":3,"file":"use-sound.esm.js","sources":["../src/use-on-mount.ts","../src/index.ts"],"sourcesContent":["import * as React from 'react';\n\nexport default function useOnMount(callback: React.EffectCallback) {\n  React.useEffect(callback, []);\n}\n","import React from 'react';\n\nimport useOnMount from './use-on-mount';\n\nimport { HookOptions, PlayOptions, PlayFunction, ReturnedValue } from './types';\n\nexport default function useSound(\n  url: string,\n  {\n    volume = 1,\n    playbackRate = 1,\n    soundEnabled = true,\n    interrupt = false,\n    onload,\n    ...delegated\n  }: HookOptions = {}\n) {\n  const HowlConstructor = React.useRef<HowlStatic | null>(null);\n\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [duration, setDuration] = React.useState<number | null>(null);\n\n  const [sound, setSound] = React.useState<Howl | null>(null);\n\n  const handleLoad = function() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n\n    // @ts-ignore\n    setDuration(this.duration() * 1000);\n  };\n\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(() => {\n    let isCancelled = false;\n\n    import('howler').then(mod => {\n      if (!isCancelled) {\n        HowlConstructor.current = mod.Howl;\n\n        const sound = new HowlConstructor.current({\n          src: [url],\n          volume,\n          rate: playbackRate,\n          onload: handleLoad,\n          ...delegated,\n        });\n\n        setSound(sound);\n      }\n    });\n    return () => {\n      isCancelled = true;\n    };\n  });\n\n  // When the URL changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  React.useEffect(() => {\n    if (HowlConstructor.current && sound) {\n      setSound(\n        new HowlConstructor.current({\n          src: [url],\n          volume,\n          onload: handleLoad,\n          ...delegated,\n        })\n      );\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `url` changes. Other changes should have no effect.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  React.useEffect(() => {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n    // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n\n  const play: PlayFunction = React.useCallback(\n    (options?: PlayOptions) => {\n      if (typeof options === 'undefined') {\n        options = {};\n      }\n\n      if (!sound || (!soundEnabled && !options.forceSoundEnabled)) {\n        return;\n      }\n\n      if (interrupt) {\n        sound.stop();\n      }\n\n      if (options.playbackRate) {\n        sound.rate(options.playbackRate);\n      }\n\n      sound.play(options.id);\n\n      sound.once('end', () => setIsPlaying(false));\n\n      setIsPlaying(true);\n    },\n    [sound, soundEnabled, interrupt]\n  );\n\n  const stop = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.stop(id);\n      setIsPlaying(false);\n    },\n    [sound]\n  );\n\n  const pause = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.pause(id);\n      setIsPlaying(false);\n    },\n    [sound]\n  );\n\n  const returnedValue: ReturnedValue = [\n    play,\n    {\n      sound,\n      stop,\n      pause,\n      isPlaying,\n      duration,\n    },\n  ];\n\n  return returnedValue;\n}\n"],"names":["useOnMount","callback","React","useSound","url","volume","playbackRate","soundEnabled","interrupt","onload","delegated","HowlConstructor","useRef","useState","isPlaying","setIsPlaying","duration","setDuration","sound","setSound","handleLoad","call","isCancelled","then","mod","current","Howl","src","rate","useEffect","play","useCallback","options","forceSoundEnabled","stop","id","once","pause","returnedValue"],"mappings":"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"}